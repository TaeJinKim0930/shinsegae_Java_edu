3조(성준님조)
	싱글톤 패턴 (서버를 매번 열고 닫지 않아도 되서 좋음)
		모든 메소드 마다 conn = 해서 싱클돈 getInstance() 를 가져와야 되는건가?
	
4조 (한강님조)
	Exception 테이블 정리해서 에러 따로 빼기
	(!참고만! batch process 대용량 데이터를 처리할때 사용) 메소드를 빼지 않고 리스트로 저장
		sqlStatements = sql 리스트 정리 list
		paramsList = parms 값들을 저장 하는 list
		다 저장 하고 batch 를 사용해서 한번에 db 넣기 (이 과정은 list 에 쌓아두고 한번에 넣어버리기 때문에 나중에 값이 많아질 경우 DB 가 뻗는 경우가 있어서 조심할 필요가 있음)
			이유는 뻗음 + 프로그램이 도중에 종료되면 정보들이 다 날라가서 위험
	
5조 (진욱님조)*** 
	github : https://github.com/SsgStudy/SSGBoardProject
	로그인/회원가입 기능 추가
		이미 있는 유저 체크 (중복)
		잘못된 아이디/비번 값 체크 (공백) 
		생년월일 (6자리 양식))
		전화번호 (숫자만 입력)
	로그인이 되기 때문에 게시글 수정이랑 삭제 같은경우 그 글을 쓴 유저가 맞을 경우만 수정/삭제가 가능하게 했음
	클래스 MVC 패턴을 쓰셔서 DAO 랑 Impl 을 구분을 해놓음
		impl 같은 경우는 통로 같은 개념이고 dao 에서 실직적인 코드가 왔다갔다 하는데 좀 더 공부가 필요
	
	싱글톤
		회원정보를 유지를 시켜주기 위해서 싱글톤으로 user 를 항시 띄워둠으로 다른 클래스에서도 사용이 가능
	메뉴()
		sc.nextLine().trim 으로 필터링을 살짝 해줌
	회원가입 숫자 필터링
		string.match(/d{6}) --> 정수값과 6자리 제한
	메인에서 Read 에서 한번 다 리스트를 가지고 오기 때문에
		update, delete 같은 기능에서 따로 select 를 해서 가지고 와서 비교 할 필요 없이 Read 를 들어온 순간 데이터를 물어서 가지고 있다가 비교
		Read 에서 메인으로 나간다면 계속 물고 있지 않고 놔줌 (글로벌로 만들어서 가지고 있지 않고 Read() 에서 가지고 있기 때문에 메인으로 빠져나가면 리셋되서 물고 있던걸 버림) 
		
	개선점
		회원탈퇴
			이건 삭제를 하게 만드셨는데 db 에 flag 를 하나 세워서 삭제가 아닌 유저를 비활성화 시키는게 맞습니다. (유저가 실수를 할 수도 있고 복구를 원할수도 있고 악성유저 차단등 다양한 이유)
		회원가입
			비밀번호는 hash (암호화) 해서 저장을 해야 됩니다
			JWT 토큰을 사용해서 로그인 기능을 구현
		






전체적
	수정할시 원하는 값만 수정을 하기 위해 (옵션들)
		1. select 로 미리 가져와서 비교
		2. 새로 넣어준 값만 업데이트
		3. 등등 더 좋은 방법이 있다면 찾아보기
	다음번엔 기능들을 나눈 다음에 진욱님네 처럼 추가 기능들을 추가를 해서 프로젝트의 완성도를 높이는 방식으로 진행을 하면 더 좋을 것 같습니다
		따로 다 구현을 하고 싶으신분은 추가 작업을 해주시면 되실거 같습니다
		앞으로는 좀 더 디테일 한 부분을 살려서 bufferReader 를 쓸지 Scanner 를 쓸지 등 디테일한 부분을 미리 정해서 코드를 좀 더 깔끔하게 하는 방식으로 하는거도 괜찮을것 같습니다
			그러려면 일단 기본적인 틀을 짤 때 같이 진행하면 될거 같아요
	리스트 같이 모든 출력값 더 깔끔하게 (진욱님조가 너무 깔끔하게 출력)
	기능별로(트렌젝션 별로) 서버를 열고 닫고 하는게 맞지만 지금 단계에서는 싱글톤으로 한번에 서버를 띄워두고 계속 가져다 쓰는거도 괜찮다 (싱글톤)
